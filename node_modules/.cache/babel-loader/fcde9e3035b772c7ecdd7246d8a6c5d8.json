{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work\\\\Desktop\\\\ADM FrontEnd\\\\colorful-rectangles\\\\src\\\\components\\\\BoxEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport store from '../store/store';\nimport { boxModified } from '../actions';\nimport { connect } from 'react-redux';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoxEditor(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  let R = 0,\n      G = 0,\n      B = 0;\n\n  if (props.id) {\n    R = store.getState().filter(box => box.id === props.id)[0].R;\n    G = store.getState().filter(box => box.id === props.id)[0].G;\n    B = store.getState().filter(box => box.id === props.id)[0].B;\n  }\n\n  console.log(R);\n  const style = {\n    [\"backgroundColor\"]: `rgb(${R}, ${G}, ${B})`\n  };\n\n  const onSubmit = data => {\n    if (data.R && data.G && data.B) {\n      store.dispatch(boxModified(props.id, Number(data.R), Number(data.G), Number(data.B)));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box-green\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"title\",\n      children: \"Box Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-edit\",\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectors\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-inserter\",\n          htmlFor: \"R\",\n          children: [\"R: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            min: \"0\",\n            max: \"255\",\n            type: \"number\",\n            ...register('R')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-inserter\",\n          htmlFor: \"G\",\n          children: [\"G: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            min: \"0\",\n            max: \"255\",\n            type: \"number\",\n            ...register('G')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-inserter\",\n          htmlFor: \"B\",\n          children: [\"B: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            min: \"0\",\n            max: \"255\",\n            type: \"number\",\n            ...register('B')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-insert\",\n          type: \"submit\",\n          children: \"Apply Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Show Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 8\n  }, this);\n}\n\n_s(BoxEditor, \"zkd3JmxRK/AmyiWtSfciHeYO5Zk=\", false, function () {\n  return [useForm];\n});\n\n_c = BoxEditor;\n\nfunction mapStateToProps(state) {\n  return {\n    list: state\n  };\n}\n\nexport default connect(mapStateToProps)(BoxEditor);\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxEditor\");","map":{"version":3,"sources":["C:/Users/Work/Desktop/ADM FrontEnd/colorful-rectangles/src/components/BoxEditor.tsx"],"names":["React","useForm","store","boxModified","connect","Modal","BoxEditor","props","register","handleSubmit","R","G","B","id","getState","filter","box","console","log","style","onSubmit","data","dispatch","Number","mapStateToProps","state","list"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport store from '../store/store';\r\nimport { boxModified } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport Modal from './Modal'\r\n\r\n\r\ninterface DataSubmit{\r\n    R: number,\r\n    G: number,\r\n    B: number,\r\n}\r\n\r\n\r\n \r\nfunction BoxEditor(props: any){\r\n    const { register, handleSubmit } = useForm<DataSubmit>();\r\n    let R = 0, G = 0, B = 0;\r\n\r\n    if (props.id)\r\n    {\r\n         R = store.getState().filter((box: { id: number; }) => box.id === props.id)[0].R;\r\n         G = store.getState().filter((box: { id: number; }) => box.id === props.id)[0].G;\r\n         B = store.getState().filter((box: { id: number; }) => box.id === props.id)[0].B;\r\n    }\r\n    console.log(R);\r\n\r\n    const style = {\r\n        [\"backgroundColor\" as any]: `rgb(${R}, ${G}, ${B})`  as React.CSSProperties,\r\n    }\r\n\r\n    const onSubmit: SubmitHandler<DataSubmit> = data => {\r\n        if (data.R && data.G && data.B)\r\n        {\r\n            store.dispatch(boxModified(props.id, Number(data.R), Number(data.G), Number(data.B)));\r\n        }\r\n\r\n    };\r\n    return(\r\n       <div className='box-green'>\r\n           <h4 className='title'>Box Editor</h4>\r\n           <div className=\"box-edit\" style={style}></div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className='selectors'>\r\n                    <label className=\"label-inserter\" htmlFor=\"R\">R: <input min=\"0\" max=\"255\" type=\"number\" {...register('R')}/></label>            \r\n                    <label className='label-inserter' htmlFor=\"G\">G: <input min=\"0\" max=\"255\" type=\"number\" {...register('G')}/></label>               \r\n                    <label className='label-inserter' htmlFor=\"B\">B: <input min=\"0\" max=\"255\" type=\"number\" {...register('B')}/></label>\r\n                </div>\r\n                <div className=\"buttons\">       \r\n                    <button className=\"button-insert\" type=\"submit\">Apply Color</button>\r\n                </div>\r\n            </form>\r\n            <button>Show Modal</button>\r\n            <Modal/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state:any){\r\n    return {\r\n        list: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BoxEditor);\r\n"]},"metadata":{},"sourceType":"module"}