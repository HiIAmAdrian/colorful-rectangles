{"ast":null,"code":"import { randomIntFromInterval } from './helper';\nlet lastId = 0;\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(object);\n\n  if (action.type === 'inserted') {\n    return [...state, {\n      id: lastId,\n      number: lastId++,\n      R: action.payload.R,\n      G: action.payload.G,\n      B: action.payload.B\n    }];\n  } else if (action.type === \"insertedRandom\") {\n    return [...state, {\n      id: lastId,\n      number: lastId++,\n      R: randomIntFromInterval(0, 255),\n      G: randomIntFromInterval(0, 255),\n      B: randomIntFromInterval(0, 255)\n    }];\n  } else if (action.type === 'modified') {\n    return state.map(box => box.id !== action.payload.id ? box : { ...box,\n      R: action.payload.R,\n      G: action.payload.G,\n      B: action.payload.B\n    });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["C:/Users/Work/Desktop/ADM FrontEnd/colorful-rectangles/src/reducer.tsx"],"names":["randomIntFromInterval","lastId","reducer","state","action","console","log","object","type","id","number","R","payload","G","B","map","box"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,UAAtC;AAEA,IAAIC,MAAc,GAAG,CAArB;AAoBA,eAAe,SAASC,OAAT,GAAyD;AAAA,MAAxCC,KAAwC,uEAApB,EAAoB;AAAA,MAAhBC,MAAgB;AACpEC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;;AACA,MAAIH,MAAM,CAACI,IAAP,KAAgB,UAApB,EACA;AACI,WAAO,CAAC,GAAGL,KAAJ,EACP;AACIM,MAAAA,EAAE,EAAER,MADR;AAEIS,MAAAA,MAAM,EAAET,MAAM,EAFlB;AAGIU,MAAAA,CAAC,EAAEP,MAAM,CAACQ,OAAP,CAAeD,CAHtB;AAIIE,MAAAA,CAAC,EAAET,MAAM,CAACQ,OAAP,CAAeC,CAJtB;AAKIC,MAAAA,CAAC,EAAEV,MAAM,CAACQ,OAAP,CAAeE;AALtB,KADO,CAAP;AAQH,GAVD,MAWK,IAAIV,MAAM,CAACI,IAAP,KAAgB,gBAApB,EACL;AACI,WAAO,CAAC,GAAGL,KAAJ,EACH;AACIM,MAAAA,EAAE,EAAER,MADR;AAEIS,MAAAA,MAAM,EAAET,MAAM,EAFlB;AAGIU,MAAAA,CAAC,EAAEX,qBAAqB,CAAC,CAAD,EAAI,GAAJ,CAH5B;AAIIa,MAAAA,CAAC,EAAEb,qBAAqB,CAAC,CAAD,EAAI,GAAJ,CAJ5B;AAKIc,MAAAA,CAAC,EAAEd,qBAAqB,CAAC,CAAD,EAAI,GAAJ;AAL5B,KADG,CAAP;AAQH,GAVI,MAWA,IAAII,MAAM,CAACI,IAAP,KAAgB,UAApB,EACL;AACI,WAAOL,KAAK,CAACY,GAAN,CAAUC,GAAG,IAAIA,GAAG,CAACP,EAAJ,KAAWL,MAAM,CAACQ,OAAP,CAAeH,EAA1B,GAA+BO,GAA/B,GAAqC,EAAC,GAAGA,GAAJ;AACzDL,MAAAA,CAAC,EAAEP,MAAM,CAACQ,OAAP,CAAeD,CADuC;AAEzDE,MAAAA,CAAC,EAAET,MAAM,CAACQ,OAAP,CAAeC,CAFuC;AAGzDC,MAAAA,CAAC,EAAEV,MAAM,CAACQ,OAAP,CAAeE;AAHuC,KAAtD,CAAP;AAKH;;AAED,SAAOX,KAAP;AACH","sourcesContent":["import { randomIntFromInterval } from './helper';\r\n\r\nlet lastId: number = 0;\r\n\r\ninterface Action{\r\n    type: string,\r\n    payload: {\r\n        id: number,\r\n        R: number,\r\n        G: number,\r\n        B: number\r\n    }\r\n}\r\n\r\ninterface Box{\r\n    id: number,\r\n    number: number,\r\n    R: number,\r\n    G: number,\r\n    B: number\r\n}\r\n\r\nexport default function reducer(state: Array<Box> = [], action: Action) {\r\n    console.log(object);\r\n    if (action.type === 'inserted')\r\n    {\r\n        return [...state,\r\n        {\r\n            id: lastId,\r\n            number: lastId++,\r\n            R: action.payload.R,\r\n            G: action.payload.G,\r\n            B: action.payload.B\r\n        }];\r\n    }\r\n    else if (action.type === \"insertedRandom\")\r\n    {\r\n        return [...state,\r\n            {\r\n                id: lastId,\r\n                number: lastId++,\r\n                R: randomIntFromInterval(0, 255),\r\n                G: randomIntFromInterval(0, 255),\r\n                B: randomIntFromInterval(0, 255)\r\n            }];\r\n    }\r\n    else if (action.type === 'modified')\r\n    {\r\n        return state.map(box => box.id !== action.payload.id ? box : {...box, \r\n            R: action.payload.R,\r\n            G: action.payload.G,\r\n            B: action.payload.B\r\n        });\r\n    }\r\n\r\n    return state;\r\n}"]},"metadata":{},"sourceType":"module"}