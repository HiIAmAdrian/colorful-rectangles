{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work\\\\Desktop\\\\ADM FrontEnd\\\\colorful-rectangles\\\\src\\\\components\\\\BoxEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport store from '../store/store';\nimport { boxModified } from '../actions';\nimport { connect } from 'react-redux';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoxEditor(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [show, setShow] = useState(false);\n  const [currentBoxData, setCurrentBoxData] = useState({\n    id: 0,\n    number: 0,\n    R: 0,\n    G: 0,\n    B: 0,\n    creationTime: ''\n  });\n  useEffect(() => {\n    const boxData = store.getState().filter(box => box.id === props.id)[0];\n    setCurrentBoxData({ ...currentBoxData,\n      ...boxData\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.id]);\n  const boxStyle = {\n    [\"backgroundColor\"]: `rgb(${currentBoxData.R}, ${currentBoxData.G}, ${currentBoxData.B})`\n  };\n\n  const onSubmit = data => {\n    if (data.R && data.G && data.B) {\n      store.dispatch(boxModified(props.id, Number(data.R), Number(data.G), Number(data.B)));\n      setCurrentBoxData({ ...currentBoxData,\n        id: 0,\n        number: 0,\n        R: 0,\n        G: 0,\n        B: 0,\n        creationTime: ''\n      });\n    }\n  };\n\n  function updateCurrentBox(event) {\n    //console.log(event.target.name);\n    let updatedValue = {};\n    updatedValue = {\n      [`${event.target.name}`]: Number(`${event.target.value}`)\n    }; //console.log(currentBoxData);\n\n    setCurrentBoxData({ ...currentBoxData,\n      ...updatedValue\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box-green\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"title\",\n      children: \"Box Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-modal\",\n      onClick: () => setShow(true),\n      children: \"Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-edit\",\n      style: boxStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectors\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-inserter\",\n          htmlFor: \"R\",\n          children: [\"R: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            min: \"0\",\n            max: \"255\",\n            onKeyUp: updateCurrentBox,\n            type: \"number\",\n            ...register('R')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-inserter\",\n          htmlFor: \"G\",\n          children: [\"G: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            min: \"0\",\n            max: \"255\",\n            onKeyUp: updateCurrentBox,\n            type: \"number\",\n            ...register('G')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-inserter\",\n          htmlFor: \"B\",\n          children: [\"B: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            min: \"0\",\n            max: \"255\",\n            onKeyUp: updateCurrentBox,\n            type: \"number\",\n            ...register('B')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-insert\",\n          type: \"submit\",\n          children: \"Apply Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      box: currentBoxData,\n      onClose: () => setShow(false),\n      show: show\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 8\n  }, this);\n}\n\n_s(BoxEditor, \"MHwbgf4mlgRhQt2qiijd0o8QBas=\", false, function () {\n  return [useForm];\n});\n\n_c = BoxEditor;\n\nfunction mapStateToProps(state) {\n  return {\n    list: state\n  };\n}\n\nexport default connect(mapStateToProps)(BoxEditor);\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxEditor\");","map":{"version":3,"sources":["C:/Users/Work/Desktop/ADM FrontEnd/colorful-rectangles/src/components/BoxEditor.tsx"],"names":["React","useEffect","useState","useForm","store","boxModified","connect","Modal","BoxEditor","props","register","handleSubmit","show","setShow","currentBoxData","setCurrentBoxData","id","number","R","G","B","creationTime","boxData","getState","filter","box","boxStyle","onSubmit","data","dispatch","Number","updateCurrentBox","event","updatedValue","target","name","value","mapStateToProps","state","list"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport store from '../store/store';\r\nimport { boxModified } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport Modal from './Modal';\r\n\r\ninterface DataSubmit{\r\n    R: number,\r\n    G: number,\r\n    B: number,\r\n}\r\n\r\ninterface Box{\r\n    id: number,\r\n    number: number,\r\n    R: number,\r\n    G: number,\r\n    B: number,\r\n    creationTime: string\r\n}\r\n\r\ninterface BoxEditorProps{\r\n    id: number;\r\n\r\n}\r\n\r\nfunction BoxEditor(props:BoxEditorProps){\r\n    const { register, handleSubmit } = useForm<DataSubmit>();\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [currentBoxData, setCurrentBoxData] = useState({\r\n        id: 0,\r\n        number: 0,\r\n        R: 0,\r\n        G: 0,\r\n        B: 0,\r\n        creationTime: ''\r\n    });\r\n\r\n   useEffect(() => {\r\n      const boxData: Box  = store.getState().filter((box: { id: number; }) => box.id === props.id)[0];\r\n    setCurrentBoxData({\r\n        ...currentBoxData,\r\n        ...boxData\r\n    });\r\n   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [ props.id]);\r\n\r\n    const boxStyle = {\r\n        [\"backgroundColor\" as string]: `rgb(${currentBoxData.R}, ${currentBoxData.G}, ${currentBoxData.B})`  as React.CSSProperties,\r\n    }\r\n\r\n    const onSubmit: SubmitHandler<DataSubmit> = data => {\r\n        if (data.R && data.G && data.B)\r\n        {\r\n            store.dispatch(boxModified(props.id, Number(data.R), Number(data.G), Number(data.B)));\r\n            setCurrentBoxData({\r\n                ...currentBoxData,\r\n                id: 0,\r\n                number: 0,\r\n                R: 0,\r\n                G: 0,\r\n                B: 0,\r\n                creationTime: ''\r\n            })\r\n        }\r\n    };\r\n\r\n    function updateCurrentBox(event: any){\r\n        //console.log(event.target.name);\r\n        let updatedValue = {};\r\n        updatedValue = {[`${event.target.name}` as string]: Number(`${event.target.value}`)};\r\n        //console.log(currentBoxData);\r\n        setCurrentBoxData({\r\n            ...currentBoxData,\r\n            ...updatedValue\r\n        });\r\n    }\r\n\r\n    return(\r\n       <div className='box-green'>\r\n           <h4 className='title'>Box Editor</h4>\r\n           <button className='button-modal' onClick={() => setShow(true)}>Info</button>\r\n           <div className=\"box-edit\" style={boxStyle}></div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className='selectors'>\r\n                    <label className=\"label-inserter\" htmlFor=\"R\">R: <input min=\"0\" max=\"255\" onKeyUp={updateCurrentBox} type=\"number\" {...register('R')}/></label>            \r\n                    <label className='label-inserter' htmlFor=\"G\">G: <input min=\"0\" max=\"255\" onKeyUp={updateCurrentBox} type=\"number\" {...register('G')}/></label>               \r\n                    <label className='label-inserter' htmlFor=\"B\">B: <input min=\"0\" max=\"255\" onKeyUp={updateCurrentBox} type=\"number\" {...register('B')}/></label>\r\n                </div>\r\n                <div className=\"buttons\">       \r\n                    <button className=\"button-insert\" type=\"submit\">Apply Color</button>\r\n                </div>\r\n            </form>\r\n            <Modal box={currentBoxData} onClose={() => setShow(false)} show={show}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state:Box[]){\r\n    return {\r\n        list: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BoxEditor);\r\n"]},"metadata":{},"sourceType":"module"}