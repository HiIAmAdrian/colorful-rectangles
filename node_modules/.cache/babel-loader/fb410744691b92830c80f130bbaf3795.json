{"ast":null,"code":"import { randomIntFromInterval } from './helper';\nlet lastId = 0;\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'inserted') {\n    return [...state, {\n      id: lastId++,\n      number: lastId++,\n      R: action.payload.R,\n      G: action.payload.G,\n      B: action.payload.B\n    }];\n  } else if (action.type === \"insertedRandom\") {\n    return [...state, {\n      id: lastId++,\n      number: lastId++,\n      R: randomIntFromInterval(0, 255),\n      G: randomIntFromInterval(0, 255),\n      B: randomIntFromInterval(0, 255)\n    }];\n  } else if (action.type === 'modify') {\n    const modifiedBox = Object.assign(state[action.payload.number], {\n      R: action.payload.R,\n      G: action.payload.G,\n      B: action.payload.B\n    });\n    return [...state, modifiedBox];\n  }\n\n  return state;\n}","map":{"version":3,"sources":["C:/Users/Astan7/Desktop/ADM FrontEnd Projects/test/src/reducer.tsx"],"names":["randomIntFromInterval","lastId","reducer","state","action","type","id","number","R","payload","G","B","modifiedBox","Object","assign"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,UAAtC;AAEA,IAAIC,MAAc,GAAG,CAArB;AAYA,eAAe,SAASC,OAAT,GAA4D;AAAA,MAA3CC,KAA2C,uEAApB,EAAoB;AAAA,MAAhBC,MAAgB;;AACvE,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EACA;AACI,WAAO,CAAC,GAAGF,KAAJ,EACP;AACIG,MAAAA,EAAE,EAAEL,MAAM,EADd;AAEIM,MAAAA,MAAM,EAAEN,MAAM,EAFlB;AAGIO,MAAAA,CAAC,EAAEJ,MAAM,CAACK,OAAP,CAAeD,CAHtB;AAIIE,MAAAA,CAAC,EAAEN,MAAM,CAACK,OAAP,CAAeC,CAJtB;AAKIC,MAAAA,CAAC,EAAEP,MAAM,CAACK,OAAP,CAAeE;AALtB,KADO,CAAP;AAQH,GAVD,MAWK,IAAIP,MAAM,CAACC,IAAP,KAAgB,gBAApB,EACL;AACI,WAAO,CAAC,GAAGF,KAAJ,EACH;AACIG,MAAAA,EAAE,EAAEL,MAAM,EADd;AAEIM,MAAAA,MAAM,EAAEN,MAAM,EAFlB;AAGIO,MAAAA,CAAC,EAAER,qBAAqB,CAAC,CAAD,EAAI,GAAJ,CAH5B;AAIIU,MAAAA,CAAC,EAAEV,qBAAqB,CAAC,CAAD,EAAI,GAAJ,CAJ5B;AAKIW,MAAAA,CAAC,EAAEX,qBAAqB,CAAC,CAAD,EAAI,GAAJ;AAL5B,KADG,CAAP;AAQH,GAVI,MAWA,IAAII,MAAM,CAACC,IAAP,KAAgB,QAApB,EACL;AACI,UAAMO,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcX,KAAK,CAACC,MAAM,CAACK,OAAP,CAAeF,MAAhB,CAAnB,EAA4C;AAC5DC,MAAAA,CAAC,EAAEJ,MAAM,CAACK,OAAP,CAAeD,CAD0C;AAE5DE,MAAAA,CAAC,EAAEN,MAAM,CAACK,OAAP,CAAeC,CAF0C;AAG5DC,MAAAA,CAAC,EAAEP,MAAM,CAACK,OAAP,CAAeE;AAH0C,KAA5C,CAApB;AAKA,WAAO,CAAC,GAAGR,KAAJ,EAAWS,WAAX,CAAP;AACH;;AAED,SAAOT,KAAP;AACH","sourcesContent":["import { randomIntFromInterval } from './helper';\r\n\r\nlet lastId: number = 0;\r\n\r\ninterface Action{\r\n    type: string,\r\n    payload: {\r\n        number: number,\r\n        R: number,\r\n        G: number,\r\n        B: number\r\n    }\r\n}\r\n\r\nexport default function reducer(state: Array<Object> = [], action: Action) {\r\n    if (action.type === 'inserted')\r\n    {\r\n        return [...state,\r\n        {\r\n            id: lastId++,\r\n            number: lastId++,\r\n            R: action.payload.R,\r\n            G: action.payload.G,\r\n            B: action.payload.B\r\n        }];\r\n    }\r\n    else if (action.type === \"insertedRandom\")\r\n    {\r\n        return [...state,\r\n            {\r\n                id: lastId++,\r\n                number: lastId++,\r\n                R: randomIntFromInterval(0, 255),\r\n                G: randomIntFromInterval(0, 255),\r\n                B: randomIntFromInterval(0, 255)\r\n            }];\r\n    }\r\n    else if (action.type === 'modify')\r\n    {\r\n        const modifiedBox = Object.assign(state[action.payload.number], {\r\n            R: action.payload.R,\r\n            G: action.payload.G,\r\n            B: action.payload.B\r\n        });\r\n        return [...state, modifiedBox];\r\n    }\r\n\r\n    return state;\r\n}"]},"metadata":{},"sourceType":"module"}